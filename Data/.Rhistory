shiny::runApp('GitHub/project_skills')
shiny::runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
shiny::runApp('GitHub/project_skills')
?selectInput
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
?textAreaInput
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp()
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
shiny::runApp('GitHub/project_skills')
runApp('GitHub/project_skills')
library(ggplot2)
WWWusage %>%
Arima(order=c(3,1,0)) %>%
forecast(h=20) %>%
autoplot
library(tidyverse)
WWWusage %>%
Arima(order=c(3,1,0)) %>%
forecast(h=20) %>%
autoplot
install.packages(forecast)
install.packages("forecast")
library(forecast)
WWWusage %>%
Arima(order=c(3,1,0)) %>%
forecast(h=20) %>%
autoplot
head(WWWusage)
x<- WWWusage
arima(lh, order = c(1,0,0))
lh
#########################################################################################
#R script for data visualization and manipulation                                       #
#########################################################################################
setwd("C:/Users/matth/Documents/GitHub/Survey-Nonresponders/Data")
reasons <- read.csv(modelledReasons.csv)
reasons <- read.csv(modeledReasons.csv)
reasons <- read.csv("modeledReasons.csv")
View(reasons)
reasons <- read.csv("modeledReasons.csv", fileEncoding="UTF-8-BOM")
View(reasons)
reasons <- read.csv("modeledReasons.csv", fileEncoding="UTF-8")
reasons <- read.csv("modeledReasons.csv", encoding="UTF-8")
View(reasons)
reasons <- read.csv("modeledReasons.csv", encoding="UTF-8-BOM")
View(reasons)
reasons <- read.csv("modeledReasons.csv", encoding="UTF-8")
View(reasons)
library(tidyverse)
View(reasons)
reasons <- read.csv("modeledReasons.csv", encoding="UTF-8") %>% rename(Response = X.U.FEFF.Response)
View(reasons)
#manually transform to long-form
A<- reasons %>% select(Response, TopicA, PercA)
B<- reasons %>% select(Response, TopicB, PercB) %>% filter(is.na(TopicB)==FALSE)
C<- reasons %>% select(Response, TopicC, PercC) %>% filter(is.na(TopicC)==FALSE)
reasonsLong <- rbind(A,B,C)
#manually transform to long-form
A<- reasons %>% select(Response, TopicA, PercA) %>% rename(Topic = TopicA, Perc = PercA)
B<- reasons %>% select(Response, TopicB, PercB) %>% filter(is.na(TopicB)==FALSE) %>% rename(Topic = TopicB, Perc = PercB)
C<- reasons %>% select(Response, TopicC, PercC) %>% filter(is.na(TopicC)==FALSE) %>% rename(Topic = TopicC, Perc = PercC)
reasonsLong <- rbind(A,B,C)
View(reasonsLong)
reasonsRepTopics <- reasonsLong %>% group_by(Topic) %>% top_n(Perc, 20)
?top_n
reasonsRepTopics <- reasonsLong %>% group_by(Topic) %>% top_n(Perc, 20, wt=Topic)
reasonsRepTopics <- reasonsLong %>% group_by(Topic) %>% top_n(20, wt=Perc)
View(reasonsRepTopics)
suggestions <- read.csv("modeledSuggestions.csv", encoding="UTF-8") %>% rename(Response = X.U.FEFF.Response)
View(suggestions)
#manually transform to long-form
sA<- suggestions %>% select(Response, TopicA, PercA) %>% rename(Topic = TopicA, Perc = PercA)
sB<- suggestions %>% select(Response, TopicB, PercB) %>% filter(is.na(TopicB)==FALSE) %>% rename(Topic = TopicB, Perc = PercB)
sC<- suggestions %>% select(Response, TopicC, PercC) %>% filter(is.na(TopicC)==FALSE) %>% rename(Topic = TopicC, Perc = PercC)
sD<- suggestions %>% select(Response, TopicD, PercD) %>% filter(is.na(TopicD)==FALSE) %>% rename(Topic = TopicD, Perc = PercD)
sE<- suggestions %>% select(Response, TopicE, PercE) %>% filter(is.na(TopicE)==FALSE) %>% rename(Topic = TopicE, Perc = PercE)
sF<- suggestions %>% select(Response, TopicF, PercF) %>% filter(is.na(TopicF)==FALSE) %>% rename(Topic = TopicF, Perc = PercF)
sG<- suggestions %>% select(Response, TopicG, PercG) %>% filter(is.na(TopicG)==FALSE) %>% rename(Topic = TopicG, Perc = PercG)
sH<- suggestions %>% select(Response, TopicH, PercH) %>% filter(is.na(TopicH)==FALSE) %>% rename(Topic = TopicH, Perc = PercH)
suggestionsLong <- rbind(sA, sB, sC, sD, sE, sF, sG, sH)
View(suggestions)
suggestionsRepTopics <- suggestionsLong %>% group_by(Topic) %>% top_n(20, wt=Perc)
View(suggestionsLong)
View(suggestionsRepTopics)
write.csv(reasonsRepTopics, file="reasonsRepTopics.csv")
write.csv(suggestionsRepTopics, file="suggestionsRepTopics.csv")
